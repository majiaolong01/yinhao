{"version":3,"sources":["service/config.js","container/login/index.jsx"],"names":["axios","defaults","withCredentials","interceptors","request","use","config","access_token","sessionStorage","getItem","headers","common","error","Promise","reject","response","data","code","message","window","location","replace","getPublicKey","get","login","post","getAllProduct","upload","updateProduct","download","responseType","Login","connect","state","user","props","handleChange","e","setState","target","name","value","username","password","encrypt","JSEncrypt","setPublicKey","publicKey","param","$http","then","res","success","dispatch","setItem","accessToken","type","payload","history","push","pathname","publicKeyStr","this","className","size","onChange","placeholder","block","onClick","Component"],"mappings":"uKAEAA,IAAMC,SAASC,iBAAkB,EACjCF,IAAMG,aAAaC,QAAQC,KAAI,SAASC,GACpC,IAAMC,EAAaC,eAAeC,QAAQ,eAE1C,OADEF,IAAeD,EAAOI,QAAQC,OAAf,aAAsCJ,GAChDD,KACR,SAASM,GAER,OAAOC,QAAQC,OAAOF,MAE1BZ,IAAMG,aAAaY,SAASV,KAAI,SAASC,GAKrC,OAJsB,MAAnBA,EAAOU,KAAKC,MACX,IAAQL,MAAMN,EAAOU,KAAKE,QAAQ,GAAE,WAAKC,OAAOC,SAASC,QAAQ,QAG9Df,EAAOU,QACf,SAASJ,GAER,OAAOC,QAAQC,OAAOF,MAEX,KACXU,aAAc,WACV,OAAOtB,IAAMuB,IAAI,gCAErBC,MAAM,SAAAR,GACF,OAAOhB,IAAMyB,KAAK,0BAA0BT,IAEhDU,cAAc,SAAAV,GACV,OAAQhB,IAAMyB,KAAK,uCAAuCT,IAE9DW,OAAO,SAAAX,GACH,OAAOhB,IAAMyB,KAAK,mCAAmCT,IAEzDY,cAAc,SAAAZ,GACV,OAAOhB,IAAMyB,KAAK,mCAAmCT,IAEzDa,SAAS,SAAAb,GACL,OAAOhB,IAAMyB,KAAK,qCAAqCT,EAAK,CAACc,aAAc,Y,w0BC7B7EC,EAHLC,aACG,SAAAC,GAAK,OAAEA,EAAMC,O,eAGb,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAYVC,aAAa,SAAAC,GACT,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAMH,EAAEE,OAAOE,SAfd,EAmBnBjB,MAAM,WAAK,IAAD,EACoB,EAAKS,MAAxBS,EADD,EACCA,SAASC,EADV,EACUA,SACVC,EAAU,IAAIC,YACpBD,EAAQE,aAAa,EAAKb,MAAMc,WAChC,IAAMC,EAAM,CACRN,WACAC,SAASC,EAAQA,QAAQD,IAE7BM,IAAMzB,MAAMwB,GAAOE,MAAK,SAAAC,GACpB,GAAc,MAAXA,EAAIlC,KAAW,CACd,IAAQmC,QAAQD,EAAIjC,SADN,IAEPmC,EAAU,EAAKlB,MAAfkB,SACPlC,OAAOX,eAAe8C,QAAQ,cAAcH,EAAII,aAChDF,EAAS,CAACG,KAAK,QAAQC,QAAQ,EAAD,GAAKN,EAAInC,KAAT,CAAcuC,YAAYJ,EAAII,gBAC5D,EAAKpB,MAAMuB,QAAQC,KAAK,CAACC,SAAS,kBAElC,IAAQhD,MAAMuC,EAAIjC,aAnCX,EAwCnBI,aAAa,WACT2B,IAAM3B,eAAe4B,MAAK,SAAAC,GAEP,MAAXA,EAAIlC,MACF,EAAKqB,SAAS,CACVS,UAAUI,EAAInC,KAAK6C,mBA3CjC,EAAK5B,MAAQ,CACTS,SAAS,GACTC,SAAS,GACTI,UAAU,IALC,E,iFAUfe,KAAKxC,iB,+BAyCC,IAAD,SACqBwC,KAAK7B,MAAxBS,EADF,EACEA,SAASC,EADX,EACWA,SAChB,OAAO,yBAAKoB,UAAU,aACR,yBAAKA,UAAU,aACX,yBAAKA,UAAU,QACX,uBAAOC,KAAK,QAAQvB,MAAOC,EAAUF,KAAK,WAAWyB,SAAU,SAAA5B,GAAC,OAAE,EAAKD,aAAaC,IAAI6B,YAAY,yCAAW,8BAGnH,yBAAKH,UAAU,QACX,uBAAOC,KAAK,QAAQvB,MAAOE,EAAUH,KAAK,WAAWgB,KAAK,WAAWS,SAAU,SAAA5B,GAAC,OAAE,EAAKD,aAAaC,IAAI6B,YAAY,oCAExH,uBAAQV,KAAK,UAAUQ,KAAK,QAAQG,OAAK,EAACC,QAAS,kBAAI,EAAK5C,UAA5D,sB,GA/DN6C,e,EAuELtC","file":"static/js/9.1f2e6d60.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport {message} from 'antd'\r\naxios.defaults.withCredentials = true;\r\naxios.interceptors.request.use(function(config) {\r\n    const access_token=sessionStorage.getItem('accessToken');\r\n   if(access_token)  config.headers.common[\"access_token\"]=access_token;\r\n    return config;\r\n}, function(error) {\r\n\r\n    return Promise.reject(error);\r\n});\r\naxios.interceptors.response.use(function(config) {\r\n    if(config.data.code===401){\r\n        message.error(config.data.message,2,()=>{window.location.replace(\"/\");});\r\n\r\n    }\r\n    return config.data;\r\n}, function(error) {\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n});\r\nexport default {\r\n    getPublicKey: () => {\r\n        return axios.get('/api/admin-server/publicKey');\r\n    },\r\n    login:data=>{\r\n        return axios.post('/api/admin-server/login',data);\r\n    },\r\n    getAllProduct:data=>{\r\n        return  axios.post('/api/admin-server/product/allproduct',data)\r\n    },\r\n    upload:data=>{\r\n        return axios.post('/api/admin-server/product/upload',data);\r\n    },\r\n    updateProduct:data=>{\r\n        return axios.post('/api/admin-server/product/update',data);\r\n    },\r\n    download:data=>{\r\n        return axios.post('/api/admin-server/product/download',data,{responseType: 'blob'});\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {JSEncrypt} from 'jsencrypt'\r\nimport $http from \"../../service/config\";\r\nimport './index.scss'\r\nimport {Input,Button,message} from 'antd'\r\n@connect(\r\n    state=>state.user\r\n)\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            publicKey:''\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.getPublicKey();\r\n    }\r\n\r\n    handleChange=e=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    login=()=>{\r\n        const {username,password}=this.state;\r\n        const encrypt = new JSEncrypt();\r\n        encrypt.setPublicKey(this.state.publicKey);\r\n        const param={\r\n            username,\r\n            password:encrypt.encrypt(password)\r\n        }\r\n        $http.login(param).then(res=>{\r\n            if(res.code===200){\r\n                message.success(res.message);\r\n                const {dispatch}=this.props;\r\n                window.sessionStorage.setItem(\"accessToken\",res.accessToken);\r\n                dispatch({type:\"LOGIN\",payload:{...res.data,accessToken:res.accessToken}});\r\n                this.props.history.push({pathname:'/product'});\r\n            }else{\r\n                message.error(res.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    getPublicKey=()=>{\r\n        $http.getPublicKey().then(res=>{\r\n            //console.log(res.data);\r\n             if(res.code===200){\r\n                  this.setState({\r\n                      publicKey:res.data.publicKeyStr\r\n                  })\r\n             }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {username,password}=this.state;\r\n        return <div className=\"container\">\r\n                      <div className=\"login-box\">\r\n                          <div className=\"item\">\r\n                              <Input size=\"large\" value={username} name=\"username\" onChange={e=>this.handleChange(e)} placeholder=\"请输入用户名\" /><br />\r\n\r\n                          </div>\r\n                          <div className=\"item\">\r\n                              <Input size=\"large\" value={password} name=\"password\" type=\"password\" onChange={e=>this.handleChange(e)} placeholder=\"请输入密码\" />\r\n                          </div>\r\n                          <Button type=\"primary\" size=\"large\" block onClick={()=>this.login()} >\r\n                             提交\r\n                          </Button>\r\n                      </div>\r\n               </div>\r\n    }\r\n}\r\n\r\nexport default Login\r\n\r\n  \r\n"],"sourceRoot":""}